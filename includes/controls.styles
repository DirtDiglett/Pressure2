"controls.styles" {
	styles {
		CheckButtonList:scrollbar {} 

		downarrow {
			image = "graphics/icon_down_default"

			render {}
			render_bg {}
		}

			downarrow:hover {
				image = "graphics/icon_down_hover"
			}

		uparrow {
			image = "graphics/icon_up_default"

			render {}
			render_bg {}		
		}

			uparrow:hover {
				image = "graphics/icon_up_hover"	
			}
		
		rightarrow {
			image = "graphics/icon_right_default"

			render {}
			render_bg {}
		}
		
			rightarrow:hover {
				image = "graphics/icon_right_hover"		
			}


		CheckButton {
			font-family = font__basefont
			
			font-size = 16
font-size = 14 [$LINUX]
font-size = 17 [$OSX]
			
			font-weight = 400
			inset-left = 23
			textcolor = color__text

			render_bg {
				0 = "image(x0,y0,x1,y1, graphics/controls/checkbox/unchecked)"
			}
		}
	
			CheckButton:selected {	
				render_bg {
					0 = "image(x0,y0,x1,y1, graphics/controls/checkbox/checked)"
				}	
			}

				CheckButton:selected:disabled {
					textcolor = color__disabled

					render_bg {
						0 = "image(x0,y0,x1,y1, graphics/controls/checkbox/checked_disabled)"
					}
				}

			CheckButton:focus {
				render_bg {
					-3 = "image(x0-10,y0-10,x0+9,y0+9, graphics/material/selectionbubbles/hover/blue/topleft)"
					-2 = "image(x0-10,y0+9,x0+9,y0+21, graphics/material/selectionbubbles/hover/blue/bottomleft)"
					-1 = "image(x0+9,y0-10,x0+28,y0+9, graphics/material/selectionbubbles/hover/blue/topright)"
					0 = "image(x0+9,y0+9,x0+28,y0+28, graphics/material/selectionbubbles/hover/blue/bottomright)"
					1 = "image(x0,y0,x1,y1, graphics/controls/checkbox/unchecked)"
				}
			}

				CheckButton:focus:selected {
					render_bg {
						-3 = "image(x0-10,y0-10,x0+9,y0+9, graphics/material/selectionbubbles/hover/blue/topleft)"
						-2 = "image(x0-10,y0+9,x0+9,y0+21, graphics/material/selectionbubbles/hover/blue/bottomleft)"
						-1 = "image(x0+9,y0-10,x0+28,y0+9, graphics/material/selectionbubbles/hover/blue/topright)"
						0 = "image(x0+9,y0+9,x0+28,y0+28, graphics/material/selectionbubbles/hover/blue/bottomright)"
						1 = "image(x0,y0,x1,y1, graphics/controls/checkbox/checked)"
					}
				}
			
			CheckButton:disabled {
				textcolor = color__disabled

				render_bg {
					0 = "image(x0,y0,x1,y1, graphics/controls/checkbox/unchecked_disabled)"
				}
			}

		IndeterminateCheckButton {
			font-family = font__basefont
			font-size = 15
font-size = 12 [$LINUX]
font-size = 16 [$OSX]
			
			font-weight = 400
			image = "graphics/controls/checkbox/indeterminate"
			textcolor = color__text
		}




		ListPanelCheckBox {
			font-family = font__basefont
			font-size = 14
font-size = 12 [$LINUX]
font-size = 15 [$OSX]
			
			font-weight = 400
			image = "graphics/controls/checkbox/unchecked_small"
			inset-left = 0 // This is used as a global override for scenarious that inset alone does not override.
			inset = "0 5 0 0"
			textcolor = color__text

			render_bg {}
		}	 

			ListPanelCheckBox:selected {
				image = "graphics/controls/checkbox/checked_small"	
			}

				ListPanelCheckBox:selected:focus {
					image = "graphics/controls/checkbox/checked_small"
				}

			ListPanelCheckBox:focus {
				image = "graphics/controls/checkbox/unchecked_small"	
			}

			ListPanelCheckBox:disabled {
				image = "graphics/controls/checkbox/unchecked_disabled_small"
				textcolor = color__disabled
			}
	
				ListPanelCheckBox:disabled:selected {
					image = "graphics/controls/checkbox/checked_disabled_small"
					textcolor = color__disabled
				}
		
		"ListPanelColumnheader ListPanelCheckBox" {
			font-family = font__basefont
			font-size = 14
font-size = 12 [$LINUX]
font-size = 15 [$OSX]
			
			font-weight = 400
			image = "graphics/controls/checkbox/unchecked_small"
			inset = "4 0 0 0" 
			textcolor = color__text

			render_bg {}
		}

			"ListPanelColumnheader ListPanelCheckBox:selected" {
				image = "graphics/controls/checkbox/unchecked_small"	
			}

				"ListPanelColumnheader ListPanelCheckBox:selected:focus" {
					image = "graphics/controls/checkbox/checked_small"
				}

			"ListPanelColumnheader ListPanelCheckBox:focus" {
				image = "graphics/controls/checkbox/unchecked_small"	
			}
	
			"ListPanelColumnheader ListPanelCheckBox:disabled" {
				image = "graphics/controls/checkbox/unchecked_disabled_small"
				textcolor = color__disabled
			}
	
				"ListPanelColumnheader ListPanelCheckBox:disabled:selected" {
					image = "graphics/controls/checkbox/checked_disabled_small"
					textcolor = color__disabled
				}

		RadioButton {
			font-family = font__basefont
			font-size = 15
font-size = 12 [$LINUX]
font-size = 16 [$OSX]
			
			font-weight = 400
			inset-left = 23
			textcolor = color__text

			render_bg {
				0 = "image(x0-1,y0-1,x1,y1, graphics/controls/radio/unchecked)"
			}
		}		 
			
			RadioButton:selected {
				render_bg {
					0 = "image(x0-1,y0-1,x1,y1, graphics/controls/radio/checked)"
				}
			}

				RadioButton:selected:disabled {
					textcolor = color__disabled
					
					render_bg {
						0 = "image(x0-1,y0-1,x1,y1, graphics/controls/radio/checked_disabled)"
					}
				}

			RadioButton:focus {
				render_bg {
					-3 = "image(x0-10,y0-10,x0+9,y0+9, graphics/material/selectionbubbles/hover/blue/topleft)"
					-2 = "image(x0-10,y0+9,x0+9,y0+21, graphics/material/selectionbubbles/hover/blue/bottomleft)"
					-1 = "image(x0+9,y0-10,x0+28,y0+9, graphics/material/selectionbubbles/hover/blue/topright)"
					0 = "image(x0+9,y0+9,x0+28,y0+28, graphics/material/selectionbubbles/hover/blue/bottomright)"
					1 = "image(x0-1,y0-1,x1,y1, graphics/controls/radio/unchecked)"
				}
			}

				RadioButton:focus:selected {
					render_bg {
						-3 = "image(x0-10,y0-10,x0+9,y0+9, graphics/material/selectionbubbles/hover/blue/topleft)"
						-2 = "image(x0-10,y0+9,x0+9,y0+21, graphics/material/selectionbubbles/hover/blue/bottomleft)"
						-1 = "image(x0+9,y0-10,x0+28,y0+9, graphics/material/selectionbubbles/hover/blue/topright)"
						0 = "image(x0+9,y0+9,x0+28,y0+28, graphics/material/selectionbubbles/hover/blue/bottomright)"
						1 = "image(x0-1,y0-1,x1,y1, graphics/controls/radio/checked)"
					}
				}

			RadioButton:disabled {
				textcolor = color__disabled

				render_bg {
					0 = "image(x0-1,y0-1,x1,y1, graphics/controls/radio/unchecked_disabled)"
				}
			}
			
		CheckButtonList {
			bgcolor = color__controlBackground
			textcolor = color__text
			
			render {
				0 = "fill(x0, y0, x0+1, y1, color__controlBorder)"
				1 = "fill(x0, y0, x1, y0+1, color__controlBorder)"
				2 = "fill(x1-1, y0, x1, y1, color__controlBorder)"
				3 = "fill(x0, y1-1, x1, y1, color__controlBorder)"
			} 
			render_bg {}
		}

		TextEntry {
			bgcolor = color__controlBackground
			font-family = font__basefont
			font-size = 18
font-size = 16 [$LINUX]
font-size = 19 [$OSX]
			
			font-weight = 400
			inset-left = 3
			selectedbgcolor = color__selectedTextBackground
			selectedtextcolor = color__selectedText
			shadowtextcolor = color__disabled
			textcolor = color__text

			render {
				0 = "fill(x0, y0, x0+1, y1, color__controlBorder)"
				1 = "fill(x0, y0, x1, y0+1, color__controlBorder)"
				2 = "fill(x1-1, y0, x1, y1, color__controlBorder)"
				3 = "fill(x0, y1-1, x1, y1, color__controlBorder)"
			}
		}
				
			TextEntry:focus {
				render {
					0 = "fill(x0, y0, x0+1, y1, color__controlBorder__focus)"
					1 = "fill(x0, y0, x1, y0+1, color__controlBorder__focus)"
					2 = "fill(x1-1, y0, x1, y1, color__controlBorder__focus)"
					3 = "fill(x0, y1-1, x1, y1, color__controlBorder__focus)"
				}
			}

			TextEntry:disabled {
				textcolor = color__disabled

				render {
					0 = "fill(x0, y0, x0+1, y1, color__controlBorder__disabled)"
					1 = "fill(x0+1, y0, x1-1, y0+1, color__controlBorder__disabled)"
					2 = "fill(x1-1, y0, x1, y1, color__controlBorder__disabled)"
					3 = "fill(x0+1, y1-1, x1-1, y1, color__controlBorder__disabled)"
				}
			}

			// This style applies to things like "Search" AKA Hint Text
			TextEntry:empty {
				bgcolor = color__controlBackground
				font-family = font__basefont
				font-size = 18
font-size = 16 [$LINUX]
font-size = 19 [$OSX]
				
				font-weight = 400
				inset-left = 3	
				selectedbgcolor = color__selectedTextBackground
				selectedtextcolor = color__selectedText
				shadowtextcolor = color__disabled
				textcolor = color__text
			}

		TextEntryLarge {
			bgcolor = color__controlBackground
			font-family = font__basefont
			font-size = 22
				
			font-weight = 400
			inset-left = 3
			selectedbgcolor = color__selectedTextBackground
			selectedtextcolor = color__selectedText
			shadowtextcolor = color__disabled
			textcolor = color__text
		}

		TextEntryURL {
			font-family = font__basefont
			font-size = 15
font-size = 12 [$LINUX]
font-size = 16 [$OSX]
			
			font-weight = 400			 
			shadowtextcolor = color__disabled	
			textcolor = color__URL
		}

			TextEntryURL:Hover {
				textcolor = color__URL__hover				
			}

		Slider {
			textcolor = color__secondaryText
		}
		  
			Slider:focus {
				textcolor = color__text  
			}

		Button {		 
			bgcolor = color__buttonBackground
			font-family = font__mediumfont
			font-size = 16
font-size = 14 [$LINUX]
font-size = 17 [$OSX]
			
			font-style = uppercase
			font-weight = 400
			inset-top = 3
			textcolor = color__buttonText
			
			render_bg {}
		}

			Button:Hover {
				textcolor = blue300
				
				// Render_bg instead of bgcolor avoids breaking every other strange button-types (Such as New Tab) that don't have a bgcolor specifically defined.
				render_bg {
					0 = "fill(x0,y0,x1,y1, color__buttonBackground__hover)"
				}
			}

				Button:disabled {
					bgcolor = none
					textcolor = color__disabled
					
					render_bg {}
				}


					Button:focus {
						bgcolor = color__buttonBackground
						textcolor = color__buttonText

						render_bg {}
					}

						Button:focus:hover {
							bgcolor = none
							textcolor = color__buttonText__hover

							// Render_bg instead of bgcolor avoids breaking every other strange button-types (Such as New Tab) that don't have a bgcolor specifically defined.
							render_bg {
								0 = "fill(x0,y0,x1,y1, color__buttonBackground__hover)"
							}
						}

						Button:active {
							bgcolor = color__buttonBackground__active
							textcolor = color__buttonText

							render_bg {}
						}

		ComboBox {
			font-family = font__mediumfont
			font-size = 16
font-size = 14 [$LINUX]
font-size = 17 [$OSX]
			
			font-style = uppercase
			font-weight = 400
			inset-left = 7
			inset-top = 1
			minimum-height = 29
			padding-left = 4
			padding-right = 4
			selectedtextcolor = color__buttonText
			textcolor = color__buttonText

			render {
				// We base this assumption on a 34 pixel high combobox.
				0 = "image( x1 - 24, y0 + 15, x1, y1, graphics/icons/dropdown/standard/down_onLightBG )"
			}
			render_bg {}
		}

			ComboBox:hover {
				textcolor = color__buttonText__hover
				
				render_bg {
					0 = "fill(x0,y0,x1,y1, color__buttonBackground__hover)"
				}
			}

		ComboBoxButton {
			bgcolor = none
			textcolor = none
			
			render_bg {}
		}

		ToggleButton {
			font-family = font__basefont
			font-size = 15
font-size = 12 [$LINUX]
font-size = 16 [$OSX]
			
			font-style = none
			font-weight = 400
			inset-left = 23
			inset-top = 0
			minimum-height = 18
			textcolor = color__text
			
			render_bg {
				0 = "image(x0,y0,x1,y1, graphics/controls/checkbox/unchecked)"
			}
		}
	
			ToggleButton:selected {	
				render_bg {
					0 = "image(x0,y0,x1,y1, graphics/controls/checkbox/checked)"
				}	
			}

				ToggleButton:selected:disabled {
					textcolor = color__disabled

					render_bg {
						0 = "image(x0,y0,x1,y1, graphics/controls/checkbox/checked_disabled)"
					}
				}

			ToggleButton:focus{
				render_bg {
					-3 = "image(x0-10,y0-10,x0+9,y0+9, graphics/material/selectionbubbles/hover/blue/topleft)"
					-2 = "image(x0-10,y0+9,x0+9,y0+21, graphics/material/selectionbubbles/hover/blue/bottomleft)"
					-1 = "image(x0+9,y0-10,x0+28,y0+9, graphics/material/selectionbubbles/hover/blue/topright)"
					0 = "image(x0+9,y0+9,x0+28,y0+28, graphics/material/selectionbubbles/hover/blue/bottomright)"
					1 = "image(x0,y0,x1,y1, graphics/controls/checkbox/unchecked)"
				}
			}

				ToggleButton:focus:selected {
					render_bg {
						-3 = "image(x0-10,y0-10,x0+9,y0+9, graphics/material/selectionbubbles/hover/blue/topleft)"
						-2 = "image(x0-10,y0+9,x0+9,y0+21, graphics/material/selectionbubbles/hover/blue/bottomleft)"
						-1 = "image(x0+9,y0-10,x0+28,y0+9, graphics/material/selectionbubbles/hover/blue/topright)"
						0 = "image(x0+9,y0+9,x0+28,y0+28, graphics/material/selectionbubbles/hover/blue/bottomright)"
						1 = "image(x0,y0,x1,y1, graphics/controls/checkbox/checked)"
					}
				}
			
			ToggleButton:disabled {
				textcolor = color__disabled

				render_bg {
					0 = "image(x0,y0,x1,y1, graphics/controls/checkbox/unchecked_disabled)"
				}
			}

		

		HotkeyEntryClearButton {
			inset-left = -50
			minimum-height = 24
			minimum-width = 24

			render {
				0 = "image(x0+3,y0+3,x1,y1, graphics\icons\closedownload\standard\closedownload)"
			}
		}

			HotkeyEntryClearButton:hover {
				render {
					0 = "image(x0+3,y0+3,x1,y1, graphics\icons\closedownload\hover\closedownload)"
				}
			}

			HotkeyEntryClearButton:selected {
				render {
					-1 = "fill(x0-10,y0-10,x1+10,y1+10, color__disabled)"
					0 = "image(x0+3,y0+3,x1,y1, graphics\icons\closedownload\active\closedownload)"
				}
			}

		TextEntryClearButton {
			inset-left = -50
			minimum-height = 24
			minimum-width = 24

			render {
				0 = "image(x0+3,y0+3,x1,y1, graphics\icons\closedownload\standard\closedownload)"
			}
		}

			TextEntryClearButton:hover {
				render {
					0 = "image(x0+3,y0+3,x1,y1, graphics\icons\closedownload\hover\closedownload)"
				}
			}

			TextEntryClearButton:selected {
				render {
					-1 = "fill(x0-10,y0-10,x1+10,y1+10, color__disabled)"
					0 = "image(x0+3,y0+3,x1,y1, graphics\icons\closedownload\active\closedownload)"
				}
			}
	}
}